#user pong_daemon_role;
worker_processes 1; # should be set to the number of cpu cores (but now we are on development so we leave it at one)
pid /run/nginx.pid;

events
{
	worker_aio_requests 12500;
	worker_connections 100000;
}

http
{
	#error_log syslog:server=unix:/dev/log warning;
	#access_log syslog:server=unix:/dev/log;
	error_log stderr info;
	access_log stdout;

	upstream api
	{
		least_conn;
		server unix:./api_sockets/api_worker_1.sock;
	}

	limit_req_zone $binary_remote_addr zone=api_request_zone:13m rate=60r/s; # the memory for the zone should be
																	  # ceil(worker_connections * worker_processes / 8000)
	limit_conn_zone $binary_remote_addr zone=api_conn_zone:13m;

	client_header_timeout 4s;
	client_body_timeout 4s;
	keepalive_timeout 4s;
	send_timeout 4s;
	lingering_close off;

	fastcgi_next_upstream off;
	fastcgi_pass_request_headers off;
	fastcgi_buffering off;
	fastcgi_connect_timeout 1s;
	fastcgi_read_timeout 1d;
	fastcgi_send_timeout 1s;

	client_header_buffer_size 4k;
	large_client_header_buffers 1 512;

	ssl_buffer_size 4k;
	ssl_session_timeout 1d;
	ssl_session_cache shared:ssl_session_store:25m; # number of cpu cores time the number of worker_connections divided by 4000
													# (result in mb)

	sendfile on;
	types_hash_max_size 2048;
	include /etc/nginx/mime.types;

	gzip on;

	gzip_proxied any;
	gzip_comp_level 4;
	gzip_buffers 2 5k;
	gzip_types "*";

	http2 on;

	server
	{
		listen 443 ssl;
		server_name _;
		ssl_reject_handshake on;

		return 444;
	}

	server
	{
		listen 443 ssl reuseport;
		server_name pong.com;
		ssl_certificate     /home/superuser/pong/nginx_config/pong.com.crt;
		ssl_certificate_key /home/superuser/pong/nginx_config/pong.com.key;

		location /api
		{
			limit_req zone=api_request_zone burst=240 nodelay;
			limit_conn api_conn_zone 300;

			fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;
			fastcgi_param QUERY_STRING    $query_string;
			fastcgi_param REQUEST_METHOD  $request_method;
			fastcgi_param CONTENT_LENGTH  $content_length;

			fastcgi_pass api;
		}
	}

	server
	{
		listen 80;
		server_name _;

		return 444;
	}

	server
	{
		listen 80 reuseport;
		server_name pong.com;

		location /api
		{
			limit_req zone=api_request_zone burst=240 nodelay;
			limit_conn api_conn_zone 300;

			fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;
			fastcgi_param QUERY_STRING    $query_string;
			fastcgi_param REQUEST_METHOD  $request_method;
			fastcgi_param CONTENT_LENGTH  $content_length;

			fastcgi_pass api;
		}
	}
}
